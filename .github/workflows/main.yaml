name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        db: [ postgres ]
        python-version: [ 3.12 ]
        include:
          - db: postgres
            db_port: 5432
    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      - name: Run Tests
        env:
          DB_NAME: ${{ matrix.db }}
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ matrix.db_port }}
          DB_PASSWORD: postgres
          DJANGO_SETTINGS_MODULE: fitnessMarketplace.settings
          ALLOWED_HOSTS: [ "*" ]
          SECRET_KEY: 'secret-test-key'
          TOKEN_LIFETIME: 604800
          DEBUG: True
          DB_USER: 'postgres'
          ENV: "dev"

        run: |
          source .venv/bin/activate
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput
          python manage.py test
